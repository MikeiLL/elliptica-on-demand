<?xml version="1.0" encoding="UTF-8"?>
<!-- also note // @codingStandardsIgnoreStart and // @codingStandardsIgnoreEnd.-->
<ruleset name="WordPress Coding Standards for Plugins">
	<description>Generally-applicable sniffs for WordPress plugins</description>
    <config name="installed_paths" value="vendor/wp-coding-standards/wpcs" />
    <arg value="sp"/>
	<arg name="extensions" value="php"/>
	<arg name="basepath" value="."/>
	<arg name="parallel" value="8"/>

	<exclude-pattern>index.php</exclude-pattern>
	<exclude-pattern>uninstall.php</exclude-pattern>

	<rule ref="WordPress-Core" >
	    <exclude name="WordPress.Files.FileName.InvalidClassFileName"/>
	    <exclude name="WordPress.Files.FileName.NotHyphenatedLowercase"/>
	</rule>
	<rule ref="WordPress-Docs" />


    <exclude name="Internal.NoCodeFound">
        <exclude-pattern>modal_body.php</exclude-pattern>
    </exclude>

	<exclude-pattern>*/node_modules/*</exclude-pattern>
	<exclude-pattern>*/vendor/*</exclude-pattern>
   <description>Codeat coding standard.</description>
   <!-- Only check PHP files. -->
   <arg name="extensions" value="php" />
   <!-- Treat all files as UTF-8. -->
   <config name="encoding" value="utf-8" />
   <!-- Show progress. -->
   <arg value="p" />
   <exclude-pattern type="relative">^\.git/*</exclude-pattern>
   <exclude-pattern>/vendor/*</exclude-pattern>
   <exclude-pattern>/node_modules/*</exclude-pattern>
   <exclude-pattern>freemius</exclude-pattern>
   <exclude-pattern>*test*</exclude-pattern>
   <exclude-pattern>index.php</exclude-pattern>
   <!-- Include some specific sniffs -->
   <rule ref="Generic.CodeAnalysis.EmptyStatement" />
   <rule ref="Generic.Commenting.Todo" />
   <rule ref="Generic.Commenting.DocComment" />
   <rule ref="Generic.Commenting.DocComment.TagValueIndent" />
   <rule ref="Generic.Commenting.DocComment.ParamNotFirst" />
   <rule ref="Generic.Commenting.DocComment.ParamGroup" />
   <rule ref="Generic.Commenting.DocComment.NonParamGroup" />
   <rule ref="Generic.Commenting.DocComment.TagsNotGrouped" />
   <rule ref="Generic.Commenting.DocComment.ContentAfterOpen" />
   <rule ref="Generic.Commenting.DocComment.SpacingBeforeShort" />
   <rule ref="Generic.Commenting.DocComment.ContentBeforeClose" />
   <!-- Check for PHP Parse errors. -->
   <rule ref="Generic.PHP.Syntax" />
   <!-- Check for file encoding problems. -->
   <rule ref="Generic.Files.ByteOrderMark" />
   <rule ref="Generic.Commenting.Todo" />
   <rule ref="Generic.Commenting.Fixme" />
   <rule ref="Zend.Files.ClosingTag" />
   <rule ref="Squiz.Commenting">
      <exclude name="Squiz.Commenting.FileComment.WrongStyle" />
      <exclude name="Squiz.Commenting.FileComment.SpacingAfterOpen" />
      <exclude name="Squiz.Commenting.PostStatementComment.Found" />
      <exclude name="Squiz.Commenting.LongConditionClosingComment.Missing" />
      <exclude name="Squiz.Commenting.LongConditionClosingComment.Invalid" />
      <exclude name="Squiz.Commenting.FunctionComment.Missing" />
      <exclude name="Squiz.Commenting.FunctionCommentThrowTag.Missing" />
      <exclude name="Squiz.Commenting.FileComment.SpacingAfterOpen" />
      <exclude name="Squiz.Commenting.FileComment.SpacingAfterComment" />
      <exclude name="Squiz.Commenting.BlockComment.NoEmptyLineBefore" />
   </rule>
   <rule ref="Squiz.PHP">
      <exclude name="Squiz.PHP.DisallowMultipleAssignments.Found" />
      <exclude name="Squiz.PHP.GlobalKeyword.NotAllowed" />
      <exclude name="Squiz.PHP.DisallowBooleanStatement.Found" />
      <exclude name="Squiz.PHP.DisallowInlineIf.Found" />
      <exclude name="Squiz.PHP.DisallowComparisonAssignment.AssignedComparison" />
      <exclude name="Squiz.PHP.ForbiddenFunctions.Found" />
   </rule>
   <rule ref="Squiz.WhiteSpace.FunctionSpacing">
      <properties>
         <property name="spacing" value="1" />
      </properties>
   </rule>
   <rule ref="Squiz.WhiteSpace">
      <exclude name="Squiz.Whitespace.CastSpacing.ContainsWhiteSpace" />
      <exclude name="Squiz.WhiteSpace.SuperfluousWhitespace.EmptyLines" />
      <exclude name="Squiz.WhiteSpace.FunctionSpacing.Before" />
      <exclude name="Squiz.WhiteSpace.FunctionSpacing.After" />
      <exclude name="Squiz.WhiteSpace.FunctionClosingBraceSpace.SpacingBeforeClose" />
      <exclude name="Squiz.WhiteSpace.ControlStructureSpacing.SpaceBeforeCloseBrace" />
      <exclude name="Squiz.WhiteSpace.ControlStructureSpacing.SpacingAfterOpenBrace" />
      <exclude name="Squiz.WhiteSpace.ControlStructureSpacing.SpacingBeforeClose" />
      <exclude name="WordPress.WhiteSpace.ControlStructureSpacing.BlankLineAfterEnd" />
   </rule>
   <rule ref="PEAR.NamingConventions">
      <exclude name="PEAR.NamingConventions.ValidClassName.Invalid" />
      <exclude name="PEAR.NamingConventions.ValidVariableName.PrivateNoUnderscore" />
      <exclude name="PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps" />
      <exclude name="PEAR.NamingConventions.ValidFunctionName.FunctionNoCapital" />
      <exclude name="PEAR.NamingConventions.ValidFunctionName.FunctionNameInvalid" />
   </rule>
   <rule ref="PEAR.NamingConventions">
      <exclude name="PEAR.NamingConventions.ValidClassName.Invalid" />
      <exclude name="PEAR.NamingConventions.ValidVariableName.PrivateNoUnderscore" />
      <exclude name="PEAR.NamingConventions.ValidFunctionName.PrivateNoUnderscore" />
   </rule>
   <rule ref="PEAR.Files.IncludingFile">
      <exclude name="PEAR.Files.IncludingFile.BracketsNotRequired" />
   </rule>

   <rule ref="WordPress.Security.ValidatedSanitizedInput">
      <type>warning</type>
   </rule>
   <rule ref="Generic.CodeAnalysis.EmptyStatement">
      <type>warning</type>
   </rule>
   <rule ref="Squiz.PHP.DisallowSizeFunctionsInLoops">
      <type>warning</type>
   </rule>
   <rule ref="WordPress.WP.I18n">
      <properties>
         <property name="text_domain" type="array" value="glossary-by-codeat,woo-fiscalita-italiana,genesis" />
      </properties>
   </rule>
</ruleset>
